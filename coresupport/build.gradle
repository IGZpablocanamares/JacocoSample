apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.8.1"
}

tasks.withType(Test) {
	jacoco.includeNoLocationClasses = true
}

task codeCoverage(type: JacocoReport, dependsOn: ['testDebugUnitTest']){
	reports {
		xml.enabled = true
		html.enabled = true
	}
	def excludes = [
		'**/R.class',
		'**/R$*.class',
		'**/*$ViewInjector*.*',
		'**/BuildConfig.*',
		'**/Manifest*.*',
		'**/*Test*.*',
		'android/**/*.*'
	]
	classDirectories = fileTree(
		dir: "${buildDir}/intermediates/classes/debug",
		excludes: excludes
	) + fileTree(
		dir: "${buildDir}/tmp/kotlin-classes/debug",
		excludes: excludes
	)
	// sources
	sourceDirectories = files([android.sourceSets.main.java.srcDirs])
	executionData = fileTree(dir: buildDir, includes: ['**/*.exec', '**/*.ec'])

}

android {
	compileSdkVersion 27
	
	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 27
		versionCode 1
		versionName "1.0"
		
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	
	buildTypes {
		debug {
			testCoverageEnabled true
		}
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation project(":coreDeps")
	implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.2'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
